package efilfoemag

import (
	"fmt"
	"testing"
)

func TestSumbit(t *testing.T) {
	for _, td := range []struct {
		number   uint8
		expected uint8
	}{
		{number: 0x00, expected: 0},
		{number: 0x01, expected: 1},
		{number: 0x02, expected: 1},
		{number: 0x03, expected: 2},
		{number: 0x04, expected: 1},
		{number: 0x05, expected: 2},
		{number: 0x06, expected: 2},
		{number: 0x07, expected: 3},
		{number: 0x08, expected: 1},
		{number: 0x09, expected: 2},
		{number: 0x0a, expected: 2},
		{number: 0x0b, expected: 3},
		{number: 0x0c, expected: 2},
		{number: 0x0d, expected: 3},
		{number: 0x0e, expected: 3},
		{number: 0x0f, expected: 4},
		{number: 0x10, expected: 1},
		{number: 0x11, expected: 2},
		{number: 0x12, expected: 2},
		{number: 0x13, expected: 3},
		{number: 0x14, expected: 2},
		{number: 0x15, expected: 3},
		{number: 0x16, expected: 3},
		{number: 0x17, expected: 4},
		{number: 0x18, expected: 2},
		{number: 0x19, expected: 3},
		{number: 0x1a, expected: 3},
		{number: 0x1b, expected: 4},
		{number: 0x1c, expected: 3},
		{number: 0x1d, expected: 4},
		{number: 0x1e, expected: 4},
		{number: 0x1f, expected: 5},
		{number: 0x20, expected: 1},
		{number: 0x21, expected: 2},
		{number: 0x22, expected: 2},
		{number: 0x23, expected: 3},
		{number: 0x24, expected: 2},
		{number: 0x25, expected: 3},
		{number: 0x26, expected: 3},
		{number: 0x27, expected: 4},
		{number: 0x28, expected: 2},
		{number: 0x29, expected: 3},
		{number: 0x2a, expected: 3},
		{number: 0x2b, expected: 4},
		{number: 0x2c, expected: 3},
		{number: 0x2d, expected: 4},
		{number: 0x2e, expected: 4},
		{number: 0x2f, expected: 5},
		{number: 0x30, expected: 2},
		{number: 0x31, expected: 3},
		{number: 0x32, expected: 3},
		{number: 0x33, expected: 4},
		{number: 0x34, expected: 3},
		{number: 0x35, expected: 4},
		{number: 0x36, expected: 4},
		{number: 0x37, expected: 5},
		{number: 0x38, expected: 3},
		{number: 0x39, expected: 4},
		{number: 0x3a, expected: 4},
		{number: 0x3b, expected: 5},
		{number: 0x3c, expected: 4},
		{number: 0x3d, expected: 5},
		{number: 0x3e, expected: 5},
		{number: 0x3f, expected: 6},
		{number: 0x40, expected: 1},
		{number: 0x41, expected: 2},
		{number: 0x42, expected: 2},
		{number: 0x43, expected: 3},
		{number: 0x44, expected: 2},
		{number: 0x45, expected: 3},
		{number: 0x46, expected: 3},
		{number: 0x47, expected: 4},
		{number: 0x48, expected: 2},
		{number: 0x49, expected: 3},
		{number: 0x4a, expected: 3},
		{number: 0x4b, expected: 4},
		{number: 0x4c, expected: 3},
		{number: 0x4d, expected: 4},
		{number: 0x4e, expected: 4},
		{number: 0x4f, expected: 5},
		{number: 0x50, expected: 2},
		{number: 0x51, expected: 3},
		{number: 0x52, expected: 3},
		{number: 0x53, expected: 4},
		{number: 0x54, expected: 3},
		{number: 0x55, expected: 4},
		{number: 0x56, expected: 4},
		{number: 0x57, expected: 5},
		{number: 0x58, expected: 3},
		{number: 0x59, expected: 4},
		{number: 0x5a, expected: 4},
		{number: 0x5b, expected: 5},
		{number: 0x5c, expected: 4},
		{number: 0x5d, expected: 5},
		{number: 0x5e, expected: 5},
		{number: 0x5f, expected: 6},
		{number: 0x60, expected: 2},
		{number: 0x61, expected: 3},
		{number: 0x62, expected: 3},
		{number: 0x63, expected: 4},
		{number: 0x64, expected: 3},
		{number: 0x65, expected: 4},
		{number: 0x66, expected: 4},
		{number: 0x67, expected: 5},
		{number: 0x68, expected: 3},
		{number: 0x69, expected: 4},
		{number: 0x6a, expected: 4},
		{number: 0x6b, expected: 5},
		{number: 0x6c, expected: 4},
		{number: 0x6d, expected: 5},
		{number: 0x6e, expected: 5},
		{number: 0x6f, expected: 6},
		{number: 0x70, expected: 3},
		{number: 0x71, expected: 4},
		{number: 0x72, expected: 4},
		{number: 0x73, expected: 5},
		{number: 0x74, expected: 4},
		{number: 0x75, expected: 5},
		{number: 0x76, expected: 5},
		{number: 0x77, expected: 6},
		{number: 0x78, expected: 4},
		{number: 0x79, expected: 5},
		{number: 0x7a, expected: 5},
		{number: 0x7b, expected: 6},
		{number: 0x7c, expected: 5},
		{number: 0x7d, expected: 6},
		{number: 0x7e, expected: 6},
		{number: 0x7f, expected: 7},
		{number: 0x80, expected: 1},
		{number: 0x81, expected: 2},
		{number: 0x82, expected: 2},
		{number: 0x83, expected: 3},
		{number: 0x84, expected: 2},
		{number: 0x85, expected: 3},
		{number: 0x86, expected: 3},
		{number: 0x87, expected: 4},
		{number: 0x88, expected: 2},
		{number: 0x89, expected: 3},
		{number: 0x8a, expected: 3},
		{number: 0x8b, expected: 4},
		{number: 0x8c, expected: 3},
		{number: 0x8d, expected: 4},
		{number: 0x8e, expected: 4},
		{number: 0x8f, expected: 5},
		{number: 0x90, expected: 2},
		{number: 0x91, expected: 3},
		{number: 0x92, expected: 3},
		{number: 0x93, expected: 4},
		{number: 0x94, expected: 3},
		{number: 0x95, expected: 4},
		{number: 0x96, expected: 4},
		{number: 0x97, expected: 5},
		{number: 0x98, expected: 3},
		{number: 0x99, expected: 4},
		{number: 0x9a, expected: 4},
		{number: 0x9b, expected: 5},
		{number: 0x9c, expected: 4},
		{number: 0x9d, expected: 5},
		{number: 0x9e, expected: 5},
		{number: 0x9f, expected: 6},
		{number: 0xa0, expected: 2},
		{number: 0xa1, expected: 3},
		{number: 0xa2, expected: 3},
		{number: 0xa3, expected: 4},
		{number: 0xa4, expected: 3},
		{number: 0xa5, expected: 4},
		{number: 0xa6, expected: 4},
		{number: 0xa7, expected: 5},
		{number: 0xa8, expected: 3},
		{number: 0xa9, expected: 4},
		{number: 0xaa, expected: 4},
		{number: 0xab, expected: 5},
		{number: 0xac, expected: 4},
		{number: 0xad, expected: 5},
		{number: 0xae, expected: 5},
		{number: 0xaf, expected: 6},
		{number: 0xb0, expected: 3},
		{number: 0xb1, expected: 4},
		{number: 0xb2, expected: 4},
		{number: 0xb3, expected: 5},
		{number: 0xb4, expected: 4},
		{number: 0xb5, expected: 5},
		{number: 0xb6, expected: 5},
		{number: 0xb7, expected: 6},
		{number: 0xb8, expected: 4},
		{number: 0xb9, expected: 5},
		{number: 0xba, expected: 5},
		{number: 0xbb, expected: 6},
		{number: 0xbc, expected: 5},
		{number: 0xbd, expected: 6},
		{number: 0xbe, expected: 6},
		{number: 0xbf, expected: 7},
		{number: 0xc0, expected: 2},
		{number: 0xc1, expected: 3},
		{number: 0xc2, expected: 3},
		{number: 0xc3, expected: 4},
		{number: 0xc4, expected: 3},
		{number: 0xc5, expected: 4},
		{number: 0xc6, expected: 4},
		{number: 0xc7, expected: 5},
		{number: 0xc8, expected: 3},
		{number: 0xc9, expected: 4},
		{number: 0xca, expected: 4},
		{number: 0xcb, expected: 5},
		{number: 0xcc, expected: 4},
		{number: 0xcd, expected: 5},
		{number: 0xce, expected: 5},
		{number: 0xcf, expected: 6},
		{number: 0xd0, expected: 3},
		{number: 0xd1, expected: 4},
		{number: 0xd2, expected: 4},
		{number: 0xd3, expected: 5},
		{number: 0xd4, expected: 4},
		{number: 0xd5, expected: 5},
		{number: 0xd6, expected: 5},
		{number: 0xd7, expected: 6},
		{number: 0xd8, expected: 4},
		{number: 0xd9, expected: 5},
		{number: 0xda, expected: 5},
		{number: 0xdb, expected: 6},
		{number: 0xdc, expected: 5},
		{number: 0xdd, expected: 6},
		{number: 0xde, expected: 6},
		{number: 0xdf, expected: 7},
		{number: 0xe0, expected: 3},
		{number: 0xe1, expected: 4},
		{number: 0xe2, expected: 4},
		{number: 0xe3, expected: 5},
		{number: 0xe4, expected: 4},
		{number: 0xe5, expected: 5},
		{number: 0xe6, expected: 5},
		{number: 0xe7, expected: 6},
		{number: 0xe8, expected: 4},
		{number: 0xe9, expected: 5},
		{number: 0xea, expected: 5},
		{number: 0xeb, expected: 6},
		{number: 0xec, expected: 5},
		{number: 0xed, expected: 6},
		{number: 0xee, expected: 6},
		{number: 0xef, expected: 7},
		{number: 0xf0, expected: 4},
		{number: 0xf1, expected: 5},
		{number: 0xf2, expected: 5},
		{number: 0xf3, expected: 6},
		{number: 0xf4, expected: 5},
		{number: 0xf5, expected: 6},
		{number: 0xf6, expected: 6},
		{number: 0xf7, expected: 7},
		{number: 0xf8, expected: 5},
		{number: 0xf9, expected: 6},
		{number: 0xfa, expected: 6},
		{number: 0xfb, expected: 7},
		{number: 0xfc, expected: 6},
		{number: 0xfd, expected: 7},
		{number: 0xfe, expected: 7},
		{number: 0xff, expected: 8},
	} {
		t.Run(fmt.Sprintf("Test for %x", td.number), func(t *testing.T) {
			actual := Sum(td.number)
			if actual != td.expected {
				t.Errorf("excpected %d, got %d", td.expected, actual)
			}
		})
	}
}
